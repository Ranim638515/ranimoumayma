import os
import cv2 as cv
import numpy as np

PEOPLE = ["Alejandro_Toledo",
    "Ann_Veneman",
    "Atal_Bihari_Vajpayee",
    "Bill_Clinton",
    "Bill_McBride",
    "Donald_Rumsfeld",
    "Edmund_Stoiber",
    "George_HW_Bush",
    "George_W_Bush",
    "Gerhard_Schroeder",
    "Gloria_Macapagal_Arroyo",
    "Gordon_Brown",
    "Igor_Ivanov",
    "Jackie_Chan",
    "James_Kelly",
    "John_Howard",
    "Junichiro_Koizumi",
    "Kofi_Annan",
    "Lance_Armstrong",
    "Lleyton_Hewitt",
    "Michael_Schumacher",
    "Pervez_Musharraf",
    "Tiger_Woods",
    "Tom_Deschle"]
DIR = r"C:/Users/ranim/OneDrive/Bureau/dataset"

haar_cascade = cv.CascadeClassifier(cv.data.haarcascades + 'haarcascade_frontalface_default.xml')

features = []
labels = []

def create_train():
    for person in people:
        path = os.path.join(DIR, person)
        if not os.path.exists(path):
            print(f"Le dossier {path} n'existe pas. Ignoré.")
            continue

        label = people.index(person)
        
        for img_name in os.listdir(path):
            img_path = os.path.join(path, img_name)
            
            img = cv.imread(img_path)
            if img is None:
                print(f"Impossible de lire l'image {img_path}. Ignorée.")
                continue
                
            gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
            
            faces_rect = haar_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=4)
            
            for (x, y, w, h) in faces_rect:
                faces_roi = gray[y:y+h, x:x+w]
                features.append(faces_roi)
                labels.append(label)

print("Création des données d'entraînement...")
create_train()
print('Entraînement terminé ---------------')

features = np.array(features, dtype='object')
labels = np.array(labels)

face_recognizer = cv.face.LBPHFaceRecognizer_create()

print("Entraînement du modèle...")
face_recognizer.train(features, labels)

face_recognizer.save('face_trained.yml')
np.save('features.npy', features)
np.save('labels.npy', labels)

print("Modèle sauvegardé dans 'face_trained.yml'")
print("Features sauvegardées dans 'features.npy'")
print("Labels sauvegardés dans 'labels.npy'")
