#face_recognition
import numpy as np
import cv2 as cv
 
# 1. Charger le classifieur Haar Cascade (chemin corrigé)
haar_cascade = cv.CascadeClassifier(cv.data.haarcascades + 'haarcascade_frontalface_default.xml')

# 2. Liste des personnes
PEOPLE = ["Alejandro_Toledo",
    "Ann_Veneman",
    "Atal_Bihari_Vajpayee",
    "Bill_Clinton",
    "Bill_McBride",
    "Donald_Rumsfeld",
    "Edmund_Stoiber",
    "George_HW_Bush",
    "George_W_Bush",
    "Gerhard_Schroeder",
    "Gloria_Macapagal_Arroyo",
    "Gordon_Brown",
    "Igor_Ivanov",
    "Jackie_Chan",
    "James_Kelly",
    "John_Howard",
    "Junichiro_Koizumi",
    "Kofi_Annan",
    "Lance_Armstrong",
    "Lleyton_Hewitt",
    "Michael_Schumacher",
    "Pervez_Musharraf",
    "Tiger_Woods",
    "Tom_Deschle"]
# 3. Charger le modèle entraîné
face_recognizer = cv.face.LBPHFaceRecognizer_create()
face_recognizer.read('face_trained.yml')

# 4. Charger l'image à tester (CHEMIN CORRIGÉ - doit pointer vers une image, pas un dossier)
img_path = r"C:/Users/ranim/OneDrive/Bureau/dataset/rttz.png"# Remplacez par le chemin de votre image de test
img = cv.imread(img_path)

# Vérifier si l'image a bien été chargée
if img is None:
    print(f"Erreur: Impossible de charger l'image à {img_path}")
    print("Vérifiez que:")
    print("1. Le chemin est correct")
    print("2. Le fichier existe")
    print("3. C'est bien une image (jpg, png, etc.)")
    exit()

# Convertir en niveaux de gris
gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
cv.imshow('Image originale', gray)

# Détecter les visages
faces_rect = haar_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=4)

if len(faces_rect) == 0:
    print("Aucun visage détecté dans l'image!")
else:
    for (x, y, w, h) in faces_rect:
        faces_roi = gray[y:y+h, x:x+w]
        
        # Faire la prédiction
        label, confidence = face_recognizer.predict(faces_roi)
        
        # Afficher les résultats
        print(f'Personne = {people[label]} avec une confiance de {confidence}')
        
        # Dessiner le rectangle et le texte
        cv.putText(img, 
                  f"{people[label]} ({confidence:.2f})", 
                  (x, y-10), 
                  cv.FONT_HERSHEY_COMPLEX, 
                  0.8, 
                  (0, 255, 0), 
                  thickness=2)
        cv.rectangle(img, (x, y), (x+w, y+h), (0, 255, 0), thickness=2)

    # Afficher le résultat
    cv.imshow('Visage détecté', img)
    cv.waitKey(0)
    cv.destroyAllWindows()


