
from sklearn.datasets import fetch_lfw_people
import os
import cv2
import numpy as np  

# Dossier où les images seront sauvegardées
save_path = r"C:/Users/ranim/OneDrive/Bureau/lfw_dataset"

# Téléchargement du dataset LFW
print("Téléchargement du dataset LFW en cours...")
lfw_people = fetch_lfw_people(min_faces_per_person=10, resize=0.5, color=True, funneled=True, download_if_missing=True)

# Vérification de la taille du dataset téléchargé
print(f"Nombre d'images téléchargées : {lfw_people.images.shape[0]}")
print(f"Nombre de personnes différentes : {len(lfw_people.target_names)}")
print(f"Dimensions des images : {lfw_people.images.shape[1:]}")

# Créer le dossier principal de sauvegarde si il n'existe pas
if not os.path.exists(save_path):
    os.makedirs(save_path)
    print(f"Dossier principal créé à : {save_path}")

# Sauvegarder les images dans des dossiers par personne
print("Enregistrement des images classées par personne...")

# Dictionnaire pour compter les images par personne
person_count = {}

for i, (image, target) in enumerate(zip(lfw_people.images, lfw_people.target)):
    # Récupérer le nom de la personne
    person_name = lfw_people.target_names[target]
    
    # Créer un dossier pour la personne si il n'existe pas
    person_dir = os.path.join(save_path, person_name.replace(" ", "_"))
    if not os.path.exists(person_dir):
        os.makedirs(person_dir)
        person_count[person_name] = 0
    
    # Compter les images pour cette personne
    person_count[person_name] = person_count.get(person_name, 0) + 1
    
    # Nom du fichier avec le numéro d'image
    filename = os.path.join(person_dir, f"{person_name.replace(' ', '_')}_{person_count[person_name]}.jpg")
    
    # Convertir et sauvegarder l'image
    image_bgr = cv2.cvtColor((image * 255).astype('uint8'), cv2.COLOR_RGB2BGR)
    cv2.imwrite(filename, image_bgr)
    
    if i % 100 == 0:  # Afficher un message tous les 100 fichiers
        print(f"{i} images enregistrées...")

# Afficher un résumé
print("\nRésumé du classement :")
for person, count in person_count.items():
    print(f"{person}: {count} images")

print(f"\nToutes les images ont été classées dans : {save_path}")
print("Téléchargement et classement terminés.")

